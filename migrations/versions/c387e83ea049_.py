"""empty message

Revision ID: c387e83ea049
Revises: 
Create Date: 2024-06-27 00:51:27.579349

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c387e83ea049'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('administrator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('cardID_type', sa.String(length=50), nullable=True),
    sa.Column('number_cardID', sa.BigInteger(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.Integer(), nullable=True),
    sa.Column('province', sa.String(length=50), nullable=True),
    sa.Column('canton', sa.String(length=50), nullable=True),
    sa.Column('distric', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=80), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('number_cardID')
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modality',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('cardID_type', sa.String(length=50), nullable=True),
    sa.Column('number_cardID', sa.BigInteger(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.Integer(), nullable=True),
    sa.Column('province', sa.String(length=50), nullable=True),
    sa.Column('canton', sa.String(length=50), nullable=True),
    sa.Column('distric', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=80), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('number_cardID')
    )
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('cardID_type', sa.String(length=50), nullable=True),
    sa.Column('number_cardID', sa.BigInteger(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.Integer(), nullable=True),
    sa.Column('province', sa.String(length=50), nullable=True),
    sa.Column('canton', sa.String(length=50), nullable=True),
    sa.Column('distric', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=80), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('number_cardID')
    )
    op.create_table('electronic_invoice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('cardID_type', sa.String(length=50), nullable=True),
    sa.Column('number_cardID', sa.BigInteger(), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.Integer(), nullable=True),
    sa.Column('province', sa.String(length=50), nullable=True),
    sa.Column('canton', sa.String(length=50), nullable=True),
    sa.Column('distric', sa.String(length=50), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('number_cardID')
    )
    op.create_table('new_course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('modality_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['modality_id'], ['modality.id'], ),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professor_payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.Integer(), nullable=True),
    sa.Column('iban_account', sa.String(length=50), nullable=True),
    sa.Column('professor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('iban_account')
    )
    op.create_table('student_payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('mount', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_payment')
    op.drop_table('professor_payment')
    op.drop_table('new_course')
    op.drop_table('electronic_invoice')
    op.drop_table('student')
    op.drop_table('professor')
    op.drop_table('modality')
    op.drop_table('course')
    op.drop_table('administrator')
    # ### end Alembic commands ###
